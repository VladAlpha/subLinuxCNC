# [PackageDev] target_format: plist, ext: tmLanguage
---
name: ngc
scopeName: source.ngc
fileTypes: [ngc]
uuid: 8dfc7db8-7d57-4047-9675-426f51a37712

patterns:
- comment: "comment, remember no nesting"
  match: \(.*\)
  name: "comment.ngc"

- comment: you screwed up a var <>
  match: '#[A-Za-z_]'
  name: invalid.illegal.ngc

- comment: # shows a var, lets highlight
  begin: ('#')
  end: '/n|>'
  beginCaptures:
    '1': {name: keyword.operator.ngc}
  captures:
    '1': { "name": ".ngc" }
  patterns:
  - include: $self
  - name: variable.other.ngc
    match: .


- comment: numbered variable 1-30, special so red
  match: '#((30$)|([0-2]?[0-9][^0-9]))'
  #match: '#[1-2]?[0-9][ =]'
  name: keyword.other.ngc
  
- comment: numbered variable >30
  match: '#((3[1-9]$)|([0-9][0-9]{3,6}))'
  name: variable.other.ngc

- comment: "Variables like #<z_safe>"
  match: "#(<[A-Za-z0-9_]*>)"
  name: "storage.type.ngc"
  captures:
    '1': { "name": "variable.other.ngc" }

- comment: math functions and compartors
  match: ' (sin|cos|tan|asin|acos|atan|exp|ln|sqrt|fup|fix|abs|or|xor|and|mod|gt|lt|ge|le|eq|ne)'
  name: keyword.operator.ngc

- comment: named subroutine 
  begin: "[0o]<([A-Za-z0-9_]*)>"
  end: endsub
  name: "meta.function.ngc"
  captures:
    '1': { "name": "entity.name.function.ngc" }
  patterns:
  - include: $self
  - name: support.other.ngc
    match: .

- comment: numbered subroutine
  name: support.function.ngc
  begin: '[oO][0-9]+ sub'
  end: endsub

    # { "match": "#",
    #       "name": "variable.other.ngc",
    #       "captures": {
    #           "1": { "name": "constant.numeric.ngc" }
    #        },
    #       "comment": "Variables 1-30 for safe keeping"
    #     },
 
...